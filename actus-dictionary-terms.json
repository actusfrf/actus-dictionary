{
    "version": {
        "Version": "1.0",
        "Edition": "0",
        "Date": "2019-10-23"
    },
    "terms": {
        "accruedInterest": {
            "identifier": "accruedInterest",
            "group": "Interest",
            "name": "Accrued Interest",
            "acronym": "IPAC",
            "type": "Real",
            "allowedValues": [],
            "default": "",
            "description": "Accrued interest as per SD. In case of NULL, this value will be recalculated using IPANX, IPCL and IPNR information. Can be used to represent irregular next IP payments."
        },
        "amortizationDate": {
            "identifier": "amortizationDate",
            "group": "Notional Principal",
            "name": "Amortization Date",
            "acronym": "AMD",
            "type": "Timestamp",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "This Date is used to calculate the annuity amounts for ANN and ANX NGX CT's. Needs only to be set in case where the contract balloon at MD and MD is less than AD."
        },
        "arrayCycleAnchorDateOfInterestPayment": {
            "identifier": "arrayCycleAnchorDateOfInterestPayment",
            "group": "Interest",
            "name": "Array Cycle Anchor Date Of Interest Payment",
            "acronym": "ARIPANXi",
            "type": "Timestamp[]",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "Same like IPANX but as array"
        },
        "arrayCycleAnchorDateOfPrincipalRedemption": {
            "identifier": "arrayCycleAnchorDateOfPrincipalRedemption",
            "group": "Notional Principal",
            "name": "Array Cycle Anchor Date Of Principal Redemption",
            "acronym": "ARPRANXj",
            "type": "Timestamp[]",
            "allowedValues": [],
            "default": "",
            "description": "Same like PRANX but as array"
        },
        "arrayCycleAnchorDateOfRateReset": {
            "identifier": "arrayCycleAnchorDateOfRateReset",
            "group": "Rate Reset",
            "name": "Array Cycle Anchor Date Of Rate Reset",
            "acronym": "ARRRANX",
            "type": "Timestamp[]",
            "allowedValues": [],
            "default": "",
            "description": "Same like RRANX but as array"
        },
        "arrayCycleOfInterestPayment": {
            "identifier": "arrayCycleOfInterestPayment",
            "group": "Interest",
            "name": "Array Cycle Of Interest Payment",
            "acronym": "ARIPCLi",
            "type": "Cycle[]",
            "allowedValues": [],
            "default": "",
            "description": "Same like IPCL but as array"
        },
        "arrayCycleOfPrincipalRedemption": {
            "identifier": "arrayCycleOfPrincipalRedemption",
            "group": "Notional Principal",
            "name": "Array Cycle Of Principal Redemption",
            "acronym": "ARPRCLj",
            "type": "Cycle[]",
            "allowedValues": [],
            "default": "",
            "description": "Same like PRCL but as array"
        },
        "arrayCycleOfRateReset": {
            "identifier": "arrayCycleOfRateReset",
            "group": "Rate Reset",
            "name": "Array Cycle Of Rate Reset",
            "acronym": "ARRRCL",
            "type": "Cycle[]",
            "allowedValues": [],
            "default": "",
            "description": "Same like RRCL but as array"
        },
        "arrayFixedVariable": {
            "identifier": "arrayFixedVariable",
            "group": "Rate Reset",
            "name": "Array Fixed Variable",
            "acronym": "ARFIXVAR",
            "type": "Enum[]",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "fixedRate",
                    "name": "Fixed Rate",
                    "acronym": "F",
                    "description": "Rate spread represents a fixed rate."
                },
                {
                    "option": "1",
                    "identifier": "variableRate",
                    "name": "Variable Rate",
                    "acronym": "V",
                    "description": "Rate spread represents the spread on top of a reference rate."
                }
            ],
            "default": "",
            "description": "For array-type rate reset schedules, this attributes defines the meaning of ARRATE."
        },
        "arrayIncreaseDecrease": {
            "identifier": "arrayIncreaseDecrease",
            "group": "Notional Principal",
            "name": "Array Increase Decrease",
            "acronym": "ARINCDEC",
            "type": "Enum[]",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "increase",
                    "name": "Increase",
                    "acronym": "INC",
                    "description": "Notional is increased in this period."
                },
                {
                    "option": "1",
                    "identifier": "decrease",
                    "name": "Decrease",
                    "acronym": "DEC",
                    "description": "Notional is decreased in this period."
                }
            ],
            "default": "",
            "description": "Indicates whether a certain PRNXT element in ARPRNX increases the principal (NT) or decreases it.\nApplies only for ANX, NAX, LAX Maturity CTs. For all other Maturity CTs the first principal payment is always in the opposite direction of all other (following) payments."
        },
        "arrayNextPrincipalRedemptionPayment": {
            "identifier": "arrayNextPrincipalRedemptionPayment",
            "group": "Notional Principal",
            "name": "Array Next Principal Redemption Payment",
            "acronym": "ARPRNXTj",
            "type": "Real[]",
            "allowedValues": [],
            "default": "",
            "description": "Same like PRNXT but as array"
        },
        "arrayRate": {
            "identifier": "arrayRate",
            "group": "Rate Reset",
            "name": "Array Rate",
            "acronym": "ARRATE",
            "type": "Real[]",
            "allowedValues": [],
            "default": "",
            "description": "For array-type rate reset schedules, this attribute represents either an interest rate (corresponding to IPNR) or a spread (corresponding to RRSP). Which case applies depends on the attribute ARFIXVAR: if ARFIXVAR=FIX then it represents the new IPNR and if ARFIXVAR=VAR then the applicable RRSP."
        },
        "businessDayConvention": {
            "identifier": "businessDayConvention",
            "group": "Calendar",
            "name": "Business Day Convention",
            "acronym": "BDC",
            "type": "Enum",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "noShift",
                    "name": "No Shift",
                    "acronym": "NOS",
                    "description": "No shift applied to non-business days."
                },
                {
                    "option": "1",
                    "identifier": "shiftCalculateFollowing",
                    "name": "Shift-Calculate Following",
                    "acronym": "SCF",
                    "description": "Shift event dates first then calculate accruals etc. Strictly shift to the next following business day."
                },
                {
                    "option": "2",
                    "identifier": "shiftCalculateModifiedFollowing",
                    "name": "Shift-Calculate Modified-Following",
                    "acronym": "SCMF",
                    "description": "Shift event dates first then calculate accruals etc. Shift to the next following business day if this falls in the same month. Shift to the most recent preceding business day otherwise."
                },
                {
                    "option": "3",
                    "identifier": "calculateShiftFollowing",
                    "name": "Calculate-Shift Following",
                    "acronym": "CSF",
                    "description": "Calculate accruals etc. first then shift event dates. Strictly shift to the next following business day."
                },
                {
                    "option": "4",
                    "identifier": "calculateShiftModifiedFollowing",
                    "name": "Calculate-Shift Modified-Following",
                    "acronym": "CSMF",
                    "description": "Calculate accruals etc. first then shift event dates. Shift to the next following business day if this falls in the same month. Shift to the most recent preceding business day otherwise."
                },
                {
                    "option": "5",
                    "identifier": "shiftCalculatePreceding",
                    "name": "Shift-Calculate Preceding",
                    "acronym": "SCP",
                    "description": "Shift event dates first then calculate accruals etc. Strictly shift to the most recent preceding business day."
                },
                {
                    "option": "6",
                    "identifier": "shiftCalculateModifiedPreceding",
                    "name": "Shift-Calculate Modified-Preceding",
                    "acronym": "SCMP",
                    "description": "Shift event dates first then calculate accruals etc. Shift to the most recent preceding business day if this falls in the same month. Shift to the next following business day otherwise."
                },
                {
                    "option": "7",
                    "identifier": "calculateShiftPreceding",
                    "name": "Calculate-Shift Preceding",
                    "acronym": "CSP",
                    "description": "Calculate accruals etc. first then shift event dates. Strictly shift to the most recent preceding business day."
                },
                {
                    "option": "8",
                    "identifier": "calculateShiftModifiedPreceding",
                    "name": "Calculate-Shift Modified-Preceding",
                    "acronym": "SCMP",
                    "description": "Calculate accruals etc. first then shift event dates. Shift to the most recent preceding business day if this falls in the same month. Shift to the next following business day otherwise."
                }
            ],
            "default": "nos",
            "description": "BDC's are linked to a calendar. Calendars have working and non-working days. A BDC value other than N means that cash flows cannot fall on non-working days, they must be shifted to the next business day (following) or the previous on (preceding).\nThese two simple rules get refined twofold:\n- Following modified (preceding): Same like following (preceding), however if a cash flow gets shifted into a new month, then  it is shifted to preceding (following) business day.\n- Shift/calculate (SC) and calculate/shift (CS). Accrual, principal, and possibly other calculations are affected by this choice. In the case of SC first the dates are shifted and after the shift cash flows are calculated. In the case of CS it is the other way round.\nAttention: Does not affect non-cyclical dates such as PRD, MD, TD, IPCED since they can be set to the correct date directly."
        },
        "calendar": {
            "identifier": "calendar",
            "group": "Calendar",
            "name": "Calendar",
            "acronym": "CLDR",
            "type": "Enum",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "noCalendar",
                    "name": "No Calendar",
                    "acronym": "NC",
                    "description": "No holidays defined"
                },
                {
                    "option": "1",
                    "identifier": "mondayToFriday",
                    "name": "MondayToFriday",
                    "acronym": "MF",
                    "description": "Saturdays and Sundays are holidays"
                }
            ],
            "default": "noCalendar",
            "description": "Calendar defines the non-working days which affect the dates of contract events (CDE's) in combination with EOMC and BDC. Custom calendars can be added as additional enum options."
        },
        "capitalizationEndDate": {
            "identifier": "capitalizationEndDate",
            "group": "Interest",
            "name": "Capitalization End Date",
            "acronym": "IPCED",
            "type": "Timestamp",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "If IPCED is set, then interest is not paid or received but added to the balance (NT) until IPCED. If IPCED does not coincide with an IP cycle, one additional interest payment gets calculated at IPCED and capitalized. Thereafter normal interest payments occur."
        },
        "clearingHouse": {
            "identifier": "clearingHouse",
            "group": "Margining",
            "name": "Clearing House",
            "acronym": "MRCLH",
            "type": "Enum",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "isClearingHouse",
                    "name": "Is Clearing House",
                    "acronym": "Y",
                    "description": "Contract creator is the clearing house."
                },
                {
                    "option": "1",
                    "identifier": "isNotClearingHouse",
                    "name": "Is Not Clearing House",
                    "acronym": "N",
                    "description": "Contract creator is not the clearing house."
                }
            ],
            "default": "",
            "description": "Indicates wheter CRID takes a clearing house function or not. In other word, whether CRID receive margins (MRIM, MRVM)."
        },
        "contractDealDate": {
            "identifier": "contractDealDate",
            "group": "Notional Principal",
            "name": "Contract Deal Date",
            "acronym": "CDD",
            "type": "Timestamp",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "This date signifies the origination of the contract where an agreement between the customer and the bank has been settled. From this date on, the institution will have a (market) risk position for financial contracts. This is even the case when IED is in future."
        },
        "contractID": {
            "identifier": "contractID",
            "group": "Contract identification",
            "name": "Contract Identifier",
            "acronym": "CID",
            "type": "Varchar",
            "allowedValues": [],
            "default": "",
            "description": "Unique identifier of a contract.  \nIf the system is used on a single firm level, an internal unique ID can be generated. If used on a national or globally level, a globally unique ID is required."
        },
        "contractPerformance": {
            "identifier": "contractPerformance",
            "group": "Counterparty",
            "name": "Contract Performance",
            "acronym": "PRF",
            "type": "Enum",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "performant",
                    "name": "Performant",
                    "acronym": "PF",
                    "description": "Contract is performing according to terms and conditions."
                },
                {
                    "option": "1",
                    "identifier": "delayed",
                    "name": "Delayed",
                    "acronym": "DL",
                    "description": "Contractual payment obligations are delayed according to the Grace Period."
                },
                {
                    "option": "2",
                    "identifier": "delinquent",
                    "name": "Delinquent",
                    "acronym": "DQ",
                    "description": "Contractual payment obligations are delinquent according to the Delinquency Period."
                },
                {
                    "option": "3",
                    "identifier": "default",
                    "name": "Default",
                    "acronym": "DF",
                    "description": "Contract defaulted on payment obligations according to Delinquency Period."
                },
                {
                    "option": "4",
                    "identifier": "matured",
                    "name": "Matured",
                    "acronym": "MA",
                    "description": "Contract matured."
                },
                {
                    "option": "5",
                    "identifier": "terminated",
                    "name": "Terminated",
                    "acronym": "TE",
                    "description": "Contract has been terminated."
                }
            ],
            "default": "PF",
            "description": "Indicates the current contract performance status. Different states of the contract range from performing to default."
        },
        "contractRole": {
            "identifier": "contractRole",
            "group": "Contract identification",
            "name": "Contract Role",
            "acronym": "CNTRL",
            "type": "Enum",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "realPositionAsset",
                    "name": "Real Position Asset",
                    "acronym": "RPA",
                    "description": "Contract creator takes the asset or lender side."
                },
                {
                    "option": "1",
                    "identifier": "realPositionLiability",
                    "name": "Real Position Liability",
                    "acronym": "RPL",
                    "description": "Contract creator takes the liability or borrower side. "
                },
                {
                    "option": "2",
                    "identifier": "receiveFirstLegl",
                    "name": "Receive First Leg",
                    "acronym": "RFL",
                    "description": "Contract creator receives the first leg. "
                },
                {
                    "option": "3",
                    "identifier": "payFirstLeg",
                    "name": "Pay First Leg",
                    "acronym": "PFL",
                    "description": "Contract creator pays the first leg."
                },
                {
                    "option": "4",
                    "identifier": "receiveFix",
                    "name": "Receive Fix",
                    "acronym": "RF",
                    "description": "Contract creator receives the fixed leg."
                },
                {
                    "option": "5",
                    "identifier": "payFix",
                    "name": "Pay Fix",
                    "acronym": "PF",
                    "description": "Contract creator pays the fixed leg."
                },
                {
                    "option": "6",
                    "identifier": "buyer",
                    "name": "Buyer",
                    "acronym": "BUY",
                    "description": "Contract creator holds the right to buy the underlying / exercise the option. "
                },
                {
                    "option": "7",
                    "identifier": "seller",
                    "name": "Seller",
                    "acronym": "SEL",
                    "description": "Contract creator holds the obligation to sell the underlying / deliver the option. "
                },
                {
                    "option": "8",
                    "identifier": "collateralPosition",
                    "name": "Collateral Position",
                    "acronym": "COL",
                    "description": "Contract represents a collateral to an underlying instrument"
                },
                {
                    "option": "9",
                    "identifier": "closeOutNetting",
                    "name": "Close out Netting",
                    "acronym": "CNO",
                    "description": "Contract creator and counterparty agree on netting payment obligations of underlying instruments in case of default. "
                },
                {
                    "option": "10",
                    "identifier": "underlying",
                    "name": "Underlying",
                    "acronym": "UDL",
                    "description": "Contract represents the underlying to a composed contract. Role of the underlying is derived from the parent. "
                },
                {
                    "option": "11",
                    "identifier": "underlyingPlus",
                    "name": "Underlying Plus",
                    "acronym": "UDLP",
                    "description": "Contract represents the underlying to a composed contract. Role of the underlying is derived from the parent. When considered a standalone contract the underlying’s creator takes the asset side. "
                },
                {
                    "option": "12",
                    "identifier": "underlyingMinus",
                    "name": "Underlying Minus",
                    "acronym": "UDLM",
                    "description": "Contract represents the underlying to a composed contract. Role of the underlying is derived from the parent. When considered a standalone contract the underlying’s creator takes the liability side."
                }
            ],
            "default": "",
            "description": "CNTRL defines which position the CRID ( the creator of the contract record ) takes in a contract. For example, whether the contract is an asset or liability, a long or short position for the CRID. \nMost contracts are simple on or off balance sheet positions which are assets, liabilities. Such contracts can also play a secondary role as a collateral. \nThe attribute is highly significant since it determines the direction of all cash flows. The exact meaning is given with each CT in the ACTUS High Level Specification document."
        },
        "contractStructure": {
            "identifier": "contractStructure",
            "group": "Contract identification",
            "name": "Contract Structure",
            "acronym": "CTS",
            "type": "ContractReference[]",
            "allowedValues": [],
            "default": "",
            "description": "A structure identifying individual or sets of underlying contracts. E.g. for FUTUR, this structure identifies the single underlying contract, for SWAPS, the FirstLeg and SecondLeg are identified, or for CEG, CEC the structure identifies Covered and Covering contracts."
        },
        "contractType": {
            "identifier": "contractType",
            "group": "Contract identification",
            "name": "Contract Type",
            "acronym": "CT",
            "type": "Enum",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "principalAtMaturity",
                    "name": "Principal at Maturity",
                    "acronym": "PAM",
                    "description": "Lending agreements with full amortization at maturity."
                },
                {
                    "option": "1",
                    "identifier": "annuity",
                    "name": "Annuity",
                    "acronym": "ANN",
                    "description": "Lending agreements with fixed periodic payments consisting of an interest and principal portion. The periodic payments are adjusted for variable rate instruments such that maturity remains fixed."
                },
                {
                    "option": "2",
                    "identifier": "negativeAmortizer",
                    "name": "Negative Amortizer",
                    "acronym": "NAM",
                    "description": "Lending agreements with fixed periodic payments consisting of an interest and principal portion. Maturity changes for variable rate instruments. "
                },
                {
                    "option": "3",
                    "identifier": "linearAmortizer",
                    "name": "Linear Amortizer",
                    "acronym": "LAM",
                    "description": "Lending agreements with fixed principal repayment amounts and variable interest payments."
                },
                {
                    "option": "4",
                    "identifier": "exoticLinearAmortizer",
                    "name": "Exotic Linear Amortizer",
                    "acronym": "LAX",
                    "description": "Lending agreements with exotic repayment schedules."
                },
                {
                    "option": "5",
                    "identifier": "callMoney",
                    "name": "Call Money",
                    "acronym": "CLM",
                    "description": "Lonas that are rolled over as long as they are not called. Once called it has to be paid back after the stipulated notice period."
                },
                {
                    "option": "6",
                    "identifier": "undefinedMaturityProfile",
                    "name": "Undefined Maturity Profile",
                    "acronym": "UMP",
                    "description": "Interest paying cash accounts (current / savings / etc.). "
                },
                {
                    "option": "7",
                    "identifier": "cash",
                    "name": "Cash",
                    "acronym": "CSH",
                    "description": "Represents cash holdings. "
                },
                {
                    "option": "8",
                    "identifier": "stock",
                    "name": "Stock",
                    "acronym": "STK",
                    "description": "Represents stocks/shares/equity. "
                },
                {
                    "option": "9",
                    "identifier": "commodity",
                    "name": "Commodity",
                    "acronym": "COM",
                    "description": "Represents commodities. "
                },
                {
                    "option": "10",
                    "identifier": "swap",
                    "name": "Swap",
                    "acronym": "SWAPS",
                    "description": "An agreement of swapping two legs such as fixed against variable or currency 1 against currency 2 etc. "
                },
                {
                    "option": "11",
                    "identifier": "plainVanillaSwap",
                    "name": "Plain Vanilla Swap",
                    "acronym": "SWPPV",
                    "description": "Plain vanilla interest rate swaps. "
                },
                {
                    "option": "12",
                    "identifier": "foreignExchangeOutright",
                    "name": "Foreign Exchange Outright",
                    "acronym": "FXOUT",
                    "description": "An agreement of swapping two cash flows in different currencies at a future point in time. "
                },
                {
                    "option": "13",
                    "identifier": "capFloor",
                    "name": "Cap and Floor",
                    "acronym": "CAPFL",
                    "description": "An agreement of paying the differential (cap or floor) of a reference rate versus a fixed rate. "
                },
                {
                    "option": "14",
                    "identifier": "future",
                    "name": "Future",
                    "acronym": "FUTUR",
                    "description": "An agreement of exchanging an underlying instrument against a fixed price in the future. "
                },
                {
                    "option": "15",
                    "identifier": "option",
                    "name": "Option",
                    "acronym": "OPTNS",
                    "description": "Different types of options on buying an underlying instrument at a fixed price in the future. "
                },
                {
                    "option": "16",
                    "identifier": "creditEnhancementGuarantee",
                    "name": "Credit Enhancement Guarantee",
                    "acronym": "CEG",
                    "description": "A guarantee / letter of credit by a third party on the scheduled payment obligations of an underlying instrument "
                },
                {
                    "option": "17",
                    "identifier": "creditEnhancementCollateral",
                    "name": "Credit Enhancement Collateral",
                    "acronym": "CEC",
                    "description": "A collateral securing the scheduled payment obligations of an underlying instrument"
                }
            ],
            "default": "",
            "description": "The ContractType is the most important information. It defines the cash flow generating pattern of a contract. The ContractType information in combination with a given state of the risk factors will produce a deterministic sequence of cash flows which are the basis of any financial analysis."
        },
        "counterpartyID": {
            "identifier": "counterpartyID",
            "group": "Counterparty",
            "name": "Counterparty Identifier",
            "acronym": "CPID",
            "type": "Varchar",
            "allowedValues": [],
            "default": "",
            "description": "CPID identifies the counterparty to the CRID in this contract.\nCPID is ideally the official LEI which can be a firm, a government body, even a single person etc. However, this can also refer to a annonymous group in which case this information is not to be disclosed. CPID may also refer to a group taking a joint risk or more generally, CPID is the main counterparty, against which the contract has been settled."
        },
        "coverageOfCreditEnhancement": {
            "identifier": "coverageOfCreditEnhancement",
            "group": "Counterparty",
            "name": "Coverage Of Credit Enhancement",
            "acronym": "CECV",
            "type": "Real",
            "allowedValues": [
                "(0,1)"
            ],
            "default": "1",
            "description": "Defines which percentage of the exposure is covered"
        },
        "creatorID": {
            "identifier": "creatorID",
            "group": "Contract identification",
            "name": "Creator Identifier",
            "acronym": "CRID",
            "type": "Varchar",
            "allowedValues": [
                [

                ]
            ],
            "default": "",
            "description": "This identifies the legal entity creating the contract record. The counterparty of the contract is tracked in CPID.\nCRID is ideally the official LEI which can be a firm, a government body, even a single person etc. However, this can also refer to a annonymous group in which case this information is not to be disclosed. CRID may also refer to a group taking a joint risk."
        },
        "creditEventTypeCovered": {
            "identifier": "creditEventTypeCovered",
            "group": "Counterparty",
            "name": "Credit Event Type Covered",
            "acronym": "CETC",
            "type": "Enum[]",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "delayed",
                    "name": "Delayed",
                    "acronym": "DL",
                    "description": "Delay of the underlying represents a credit event."
                },
                {
                    "option": "1",
                    "identifier": "delinquent",
                    "name": "Delinquent",
                    "acronym": "DQ",
                    "description": "Delinquency of the underlying represents a credit event."
                },
                {
                    "option": "2",
                    "identifier": "default",
                    "name": "Default",
                    "acronym": "DF",
                    "description": "Default of the underlying represents a credit event."
                }
            ],
            "default": "DF",
            "description": "The type of credit events covered e.g. in credit enhancement or credit default swap contracts. Only the defined credit event types may trigger the protection."
        },
        "creditLineAmount": {
            "identifier": "creditLineAmount",
            "group": "Notional Principal",
            "name": "Credit Line Amount",
            "acronym": "CLA",
            "type": "Real",
            "allowedValues": [
                "Positive"
            ],
            "default": "",
            "description": "If defined, gives the total amount that can be drawn from a credit line. The remaining amount that can still be drawn is given by CLA-NT.\nFor ANN, NAM, the credit line can only be drawn prior to PRANX-1PRCL.\nFor CRL, the remaining amount that can still be drawn is given by CLA-Sum(NT of attached contracts)."
        },
        "currency": {
            "identifier": "currency",
            "group": "Notional Principal",
            "name": "Currency",
            "acronym": "CUR",
            "type": "Varchar",
            "allowedValues": [
                "ISO4217"
            ],
            "default": "",
            "description": "The currency of the cash flows."
        },
        "currency2": {
            "identifier": "currency2",
            "group": "Notional Principal",
            "name": "Currency 2",
            "acronym": "CUR2",
            "type": "Varchar",
            "allowedValues": [
                "ISO4217"
            ],
            "default": "",
            "description": "The currency of the cash flows of the second leg (if not defined, main currency applies)\n"
        },
        "cycleAnchorDateOfDividend": {
            "identifier": "cycleAnchorDateOfDividend",
            "group": "Dividend",
            "name": "Cycle Anchor Date Of Dividend",
            "acronym": "DVANX",
            "type": "Timestamp",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "Date from which the dividend payment date schedule is calculated according to the cycle length. The first dividend payment event takes place on this anchor."
        },
        "cycleAnchorDateOfFee": {
            "identifier": "cycleAnchorDateOfFee",
            "group": "Fees",
            "name": "Cycle Anchor Date Of Fee",
            "acronym": "FEANX",
            "type": "Timestamp",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "Date from which the fee payment date schedule is calculated according to the cycle length. The first fee payment event takes place on this anchor."
        },
        "cycleAnchorDateOfInterestCalculationBase": {
            "identifier": "cycleAnchorDateOfInterestCalculationBase",
            "group": "Interest",
            "name": "Cycle Anchor Date Of Interest Calculation Base",
            "acronym": "IPCBANX",
            "type": "Timestamp",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "Date from which the interest calculation base date schedule is calculated according to the cycle length. The first interest calculation base event takes place on this anchor."
        },
        "cycleAnchorDateOfInterestPayment": {
            "identifier": "cycleAnchorDateOfInterestPayment",
            "group": "Interest",
            "name": "Cycle Anchor Date Of Interest Payment",
            "acronym": "IPANX",
            "type": "Timestamp",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "Date from which the interest payment date schedule is calculated according to the cycle length. The first interest payment event takes place on this anchor."
        },
        "cycleAnchorDateOfMargining": {
            "identifier": "cycleAnchorDateOfMargining",
            "group": "Margining",
            "name": "Cycle Anchor Date Of Margining",
            "acronym": "MRANX",
            "type": "Timestamp",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "Date from which the margin call date schedule is calculated according to the cycle length. The first margin call event takes place on this anchor."
        },
        "cycleAnchorDateOfOptionality": {
            "identifier": "cycleAnchorDateOfOptionality",
            "group": "Optionality",
            "name": "Cycle Anchor Date Of Optionality",
            "acronym": "OPANX",
            "type": "Timestamp",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "Used for Basic Maturities (such as PAM, RGM, ANN, NGM and their Step-up versions) and American and Bermudan style options. \n- Basic Maturities: Within the group of these Maturities, it indicates the possibility of prepayments. Prepayment features are controlled by Behavior. \n- American and Bermudan style Options: Begin of exercise period."
        },
        "cycleAnchorDateOfPrincipalRedemption": {
            "identifier": "cycleAnchorDateOfPrincipalRedemption",
            "group": "Notional Principal",
            "name": "Cycle Anchor Date Of Principal Redemption",
            "acronym": "PRANX",
            "type": "Timestamp",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "Date from which the principal payment date schedule is calculated according to the cycle length. The first principal payment event takes place on this anchor."
        },
        "cycleAnchorDateOfRateReset": {
            "identifier": "cycleAnchorDateOfRateReset",
            "group": "Rate Reset",
            "name": "Cycle Anchor Date Of Rate Reset",
            "acronym": "RRANX",
            "type": "Timestamp",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "Date from which the rate reset date schedule is calculated according to the cycle length. The first rate reset event takes place on this anchor."
        },
        "cycleAnchorDateOfScalingIndex": {
            "identifier": "cycleAnchorDateOfScalingIndex",
            "group": "Notional Principal",
            "name": "Cycle Anchor Date Of Scaling Index",
            "acronym": "SCANX",
            "type": "Timestamp",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "Date from which the scaling date schedule is calculated according to the cycle length. The first scaling event takes place on this anchor."
        },
        "cycleOfDividend": {
            "identifier": "cycleOfDividend",
            "group": "Dividend",
            "name": "Cycle Of Dividend",
            "acronym": "DVCL",
            "type": "Cycle",
            "allowedValues": [
                "[ISO8601 Duration]L[s={‘+’,’-’}]"
            ],
            "default": "",
            "description": "Defines in combination with DVANX the payment points of dividends. The dividend payment schedule will start at DVANX and end at MaximumProjectionPeriod (cf. sheet Modeling Parameters)."
        },
        "cycleOfFee": {
            "identifier": "cycleOfFee",
            "group": "Fees",
            "name": "Cycle Of Fee",
            "acronym": "FECL",
            "type": "Cycle",
            "allowedValues": [
                "[ISO8601 Duration]L[s={‘+’,’-’}]"
            ],
            "default": "",
            "description": "Defines in combination with FEANX the payment points of fees"
        },
        "cycleOfInterestCalculationBase": {
            "identifier": "cycleOfInterestCalculationBase",
            "group": "Interest",
            "name": "Cycle Of Interest Calculation Base",
            "acronym": "IPCBCL",
            "type": "Cycle",
            "allowedValues": [
                "[ISO8601 Duration]L[s={‘+’,’-’}]"
            ],
            "default": "",
            "description": "Concerning the format see PRCL. \nDefines the subsequent adjustment points to NT of the interest payment calculation base."
        },
        "cycleOfInterestPayment": {
            "identifier": "cycleOfInterestPayment",
            "group": "Interest",
            "name": "Cycle Of Interest Payment",
            "acronym": "IPCL",
            "type": "Cycle",
            "allowedValues": [
                "[ISO8601 Duration]L[s={‘+’,’-’}]"
            ],
            "default": "",
            "description": "Cycle according to which the interest payment date schedule will be calculated.\nIn case IPCL is not set, then there will only be an interest payment event at MD (and possibly at IPANX if set).\nThe interval will be adjusted yet by EOMC and BDC."
        },
        "cycleOfMargining": {
            "identifier": "cycleOfMargining",
            "group": "Margining",
            "name": "Cycle Of Margining",
            "acronym": "MRCL",
            "type": "Cycle",
            "allowedValues": [
                "[ISO8601 Duration]L[s={‘+’,’-’}]"
            ],
            "default": "",
            "description": "Defines together with MRANX the points where margins can be called."
        },
        "cycleOfOptionality": {
            "identifier": "cycleOfOptionality",
            "group": "Optionality",
            "name": "Cycle Of Optionality",
            "acronym": "OPCL",
            "type": "Cycle",
            "allowedValues": [
                "[ISO8601 Duration]L[s={‘+’,’-’}]"
            ],
            "default": "",
            "description": "Cycle according to which the option exercise date schedule will be calculated.\nOPCL can be NULL for American Options or Prepayment Optionality in which case the optionality period starts at OPANX and ends at OPXED (for american options) or MD (in case of prepayment optionality).\nThe interval will be adjusted yet by EOMC and BDC."
        },
        "cycleOfPrincipalRedemption": {
            "identifier": "cycleOfPrincipalRedemption",
            "group": "Notional Principal",
            "name": "Cycle Of Principal Redemption",
            "acronym": "PRCL",
            "type": "Cycle",
            "allowedValues": [
                "[ISO8601 Duration]L[s={‘+’,’-’}]"
            ],
            "default": "",
            "description": "Cycle according to which the interest payment date schedule will be calculated.\nIn case PRCL is not set, then there will only be one principal payment event at MD (and possibly at PRANX if set).\nThe interval will be adjusted yet by EOMC and BDC."
        },
        "cycleOfRateReset": {
            "identifier": "cycleOfRateReset",
            "group": "Rate Reset",
            "name": "Cycle Of Rate Reset",
            "acronym": "RRCL",
            "type": "Cycle",
            "allowedValues": [
                "[ISO8601 Duration]L[s={‘+’,’-’}]"
            ],
            "default": "",
            "description": "Cycle according to which the rate reset date schedule will be calculated.\nIn case RRCL is not set, then there will only be one rate reset event at RRANX given RRANX if set.\nThe interval will be adjusted yet by EOMC and BDC."
        },
        "cycleOfScalingIndex": {
            "identifier": "cycleOfScalingIndex",
            "group": "Notional Principal",
            "name": "Cycle Of Scaling Index",
            "acronym": "SCCL",
            "type": "Cycle",
            "allowedValues": [
                "[ISO8601 Duration]L[s={‘+’,’-’}]"
            ],
            "default": "",
            "description": "Cycle according to which the scaling date schedule will be calculated.\nIn case SCCL is not set, then there will only be one scaling event at SCANX given SCANX is set.\nThe interval will be adjusted yet by EOMC and BDC."
        },
        "cyclePointOfInterestPayment": {
            "identifier": "cyclePointOfInterestPayment",
            "group": "Interest",
            "name": "Cycle Point Of Interest Payment",
            "acronym": "IPPNT",
            "type": "Enum",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "beginning",
                    "name": "Beginning",
                    "acronym": "B",
                    "description": "Interest is paid upfront of the interest period."
                },
                {
                    "option": "1",
                    "identifier": "end",
                    "name": "End",
                    "acronym": "E",
                    "description": "Interest is paid at the end of the interest period."
                }
            ],
            "default": "E",
            "description": "Usually, interest is paid at the end of each IPCL which corresponds to a IPPNT value of E which is also the default. If interest payment occurs at the beginning of the cycle, the value is B."
        },
        "cyclePointOfRateReset": {
            "identifier": "cyclePointOfRateReset",
            "group": "Rate Reset",
            "name": "Cycle Point Of Rate Reset",
            "acronym": "RRPNT",
            "type": "Enum",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "beginning",
                    "name": "Beginning",
                    "acronym": "B",
                    "description": "The new rate is applied at the beginning of the reset period."
                },
                {
                    "option": "1",
                    "identifier": "end",
                    "name": "End",
                    "acronym": "E",
                    "description": "The new rate is applied at the end of the reset period."
                }
            ],
            "default": "B",
            "description": "Normally rates get reset at the beginning of any resetting cycles. There are contracts where the rate is not set at the beginning but at the end of the cycle and then applied to the previous cycle (post-fixing); in other words the rate applies before it is fixed. Hence, the new rate is not known during the entire cycle where it applies. Therefore, the rate will be applied backwards at the end of the cycle. This happens through a correction of interest accrued."
        },
        "dayCountConvention": {
            "identifier": "dayCountConvention",
            "group": "Interest",
            "name": "Day Count Convention",
            "acronym": "IPDC",
            "type": "Enum",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "actualActual",
                    "name": "Actual/Actual",
                    "acronym": "AA",
                    "description": "Year fractions accrue on the basis of the actual number of days per month and per year in the respective period."
                },
                {
                    "option": "1",
                    "identifier": "actualThreeSixty",
                    "name": "Actual Three Sixty",
                    "acronym": "A360",
                    "description": "Year fractions accrue on the basis of the actual number of days per month and 360 days per year in the respective period."
                },
                {
                    "option": "2",
                    "identifier": "actualThreeSixtyFive",
                    "name": "Actual Three Sixty Five",
                    "acronym": "A365",
                    "description": "Year fractions accrue on the basis of the actual number of days per month and 365 days per year in the respective period."
                },
                {
                    "option": "3",
                    "identifier": "thirtyEThreeSixtyISDA",
                    "name": "Thirty E Three Sixty ISDA",
                    "acronym": "30E360ISDA",
                    "description": "Year fractions accrue on the basis of 30 days per month and 360 days per year in the respective period (ISDA method)."
                },
                {
                    "option": "4",
                    "identifier": "thirtyEThreeSixty",
                    "name": "Thirty E Three Sixty",
                    "acronym": "30E360",
                    "description": "Year fractions accrue on the basis of 30 days per month and 360 days per year in the respective period."
                },
                {
                    "option": "5",
                    "identifier": "twentyEightEThreeThirtySix",
                    "name": "Twenty Eight E Three Thirty Six",
                    "acronym": "28E336",
                    "description": "Year fractions accrue on the basis of 28 days per month and 336 days per year in the respective period."
                }
            ],
            "default": "",
            "description": "Method defining how days are counted between two dates. This finally defines the year fraction in accrual calculations."
        },
        "delinquencyPeriod": {
            "identifier": "delinquencyPeriod",
            "group": "Counterparty",
            "name": "Delinquency Period",
            "acronym": "DQP",
            "type": "Period",
            "allowedValues": [
                "ISO8601 Duration"
            ],
            "default": "P0D",
            "description": "If real payment happens after scheduled payment date plus DLP, then the counterparty is in technical default. This means that the creditor legally has the right to declare default of the debtor."
        },
        "delinquencyRate": {
            "identifier": "delinquencyRate",
            "group": "Counterparty",
            "name": "Delinquency Rate",
            "acronym": "DQR",
            "type": "Real",
            "allowedValues": [
                "Positive"
            ],
            "default": "0",
            "description": "Rate at which Delinquency Payments accrue on NT (in addition to the interest rate) during the DelinquencyPeriod"
        },
        "deliverySettlement": {
            "identifier": "deliverySettlement",
            "group": "Settlement",
            "name": "Delivery Settlement",
            "acronym": "DS",
            "type": "Enum",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "cashSettlement",
                    "name": "Cash Settlement",
                    "acronym": "S",
                    "description": "The market value of the underlying is settled."
                },
                {
                    "option": "1",
                    "identifier": "physicalSettlement",
                    "name": "Physical Settlement",
                    "acronym": "D",
                    "description": "The underlying is delivered physically."
                }
            ],
            "default": "D",
            "description": "Indicates whether the contract is settled in cash or physical delivery.\nIn case of physical delivery, the underlying contract and associated (future) cash flows are effectively exchanged. In case of cash settlement, the current market value of the underlying contract determines the cash flow exchanged."
        },
        "endOfMonthConvention": {
            "identifier": "endOfMonthConvention",
            "group": "Calendar",
            "name": "End Of Month Convention",
            "acronym": "EOMC",
            "type": "Enum",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "sameDay",
                    "name": "Same Day",
                    "acronym": "SD",
                    "description": "Schedule times always fall on the schedule anchor date day of the month."
                },
                {
                    "option": "1",
                    "identifier": "endOfMonth",
                    "name": "End of Month",
                    "acronym": "EOM",
                    "description": "Schedule times fall on the end of every month if the anchor date represents the last day of the respective month."
                }
            ],
            "default": "sd",
            "description": "When computing schedules a special problem arises if an anchor date is at the end of a month and a cycle of monthly or quarterly is applied (yearly in the case of leap years only). How do we have to interpret an anchor date April 30 plus 1M cycles? In case where EOM is selected, it will jump to the 31st of May, then June 30, July 31 and so on. If SM is selected, it will jump to the 30st always with of course an exception in February. \nThis logic applies for all months having 30 or less days and an anchor date at the last day. Month with 31 days will at any rate jump to the last of the month if anchor date is on the last day."
        },
        "exDividendDate": {
            "identifier": "exDividendDate",
            "group": "Dividend",
            "name": "Ex Dividend Date",
            "acronym": "DVEX",
            "type": "Timestamp",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "In case contract is traded between DVEX and next DV payment date (i.e. PRD>DVEX & PRD<next DV payment date), then the old holder of the contract (previous to the trade) receives the next DV payment. In other words, the next DV payment is cancelled for the new (after the trade) holder of the contract."
        },
        "exerciseAmount": {
            "identifier": "exerciseAmount",
            "group": "Settlement",
            "name": "Exercise Amount",
            "acronym": "XA",
            "type": "Real",
            "allowedValues": [],
            "default": "",
            "description": "The amount fixed at Exercise Date for a contingent event/obligation such as a forward condition, optionality etc. The Exercise Amount is fixed at Exercise Date but not settled yet."
        },
        "exerciseDate": {
            "identifier": "exerciseDate",
            "group": "Settlement",
            "name": "Exercise Date",
            "acronym": "XD",
            "type": "Timestamp",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "Date of exercising a contingent event/obligation such as a forward condition, optionality etc. The Exercise date marks the observed timestamp of fixing the contingent event and respective payment obligation not necessarily the timestamp of settling the obligation."
        },
        "feeAccrued": {
            "identifier": "feeAccrued",
            "group": "Fees",
            "name": "Fee Accrued",
            "acronym": "FEAC",
            "type": "Real",
            "allowedValues": [],
            "default": "",
            "description": "Accrued fees as per SD"
        },
        "feeBasis": {
            "identifier": "feeBasis",
            "group": "Fees",
            "name": "Fee Basis",
            "acronym": "FEB",
            "type": "Enum",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "absoluteValue",
                    "name": "Absolute Value",
                    "acronym": "A",
                    "description": "The fee rate represents an absolute value."
                },
                {
                    "option": "1",
                    "identifier": "nonimalValueOfTheUnderlying",
                    "name": "Nominal Value of the Underlying",
                    "acronym": "N",
                    "description": "The fee rate represents a rate that accrues fees on the basis of the nominal value of the underlying."
                }
            ],
            "default": "",
            "description": "Basis, on which Fee is calculated. For FEB=’A’, FER is interpreted as an absolute amount to be paid at every FP event and for FEB=’N’, FER represents a rate at which FP amounts accrue on the basis of the contract’s NT."
        },
        "feeRate": {
            "identifier": "feeRate",
            "group": "Fees",
            "name": "Fee Rate",
            "acronym": "FER",
            "type": "Real",
            "allowedValues": [],
            "default": "",
            "description": "Rate of Fee which is a percentage of the underlying or FER is an absolute amount. For all contracts where FEB does not apply (cf. business rules), FER is interpreted as an absolute amount."
        },
        "fixingDays": {
            "identifier": "fixingDays",
            "group": "Rate Reset",
            "name": "Fixing Days",
            "acronym": "RRFIX",
            "type": "Period",
            "allowedValues": [
                "ISO8601 Duration"
            ],
            "default": "P0D",
            "description": "Interest rate resets (adjustments) are usually fixed one or two days (usually Business Days) before the new rate applies (defined by the rate reset schedule). This field holds the period between fixing and application of a rate."
        },
        "futuresPrice": {
            "identifier": "futuresPrice",
            "group": "Settlement",
            "name": "Futures Price",
            "acronym": "PFUT",
            "type": "Real",
            "allowedValues": [],
            "default": "",
            "description": "The price the counterparties agreed upon at which the underlying contract (of a FUTUR) is exchanged/settled at STD. Quoting is different for different types of underlyings: Fixed Income = in percentage, all others in nominal terms."
        },
        "gracePeriod": {
            "identifier": "gracePeriod",
            "group": "Counterparty",
            "name": "Grace Period",
            "acronym": "GRP",
            "type": "Period",
            "allowedValues": [
                "ISO8601 Duration"
            ],
            "default": "P0D",
            "description": "If real payment happens after scheduled payment date plus GRP, then the payment is in delay."
        },
        "guaranteedExposure": {
            "identifier": "guaranteedExposure",
            "group": "Counterparty",
            "name": "Guaranteed Exposure",
            "acronym": "CEGE",
            "type": "Enum",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "nominalValue",
                    "name": "Nominal Value",
                    "acronym": "NO",
                    "description": "Nominal value of the exposure is covered."
                },
                {
                    "option": "1",
                    "identifier": "nominalValuePlusInterest",
                    "name": "Nominal Value plus Interest",
                    "acronym": "NI",
                    "description": "Nominal value of the exposure plus interest accrued is covered."
                },
                {
                    "option": "2",
                    "identifier": "marketValue",
                    "name": "Market Value",
                    "acronym": "MV",
                    "description": "Market value of the exposure is covered."
                }
            ],
            "default": "",
            "description": "Defines which value of the exposure is covered:\n- NO: Nominal Value\n- NI: Nominal plus Interest\n- MV: Market Value"
        },
        "initialExchangeDate": {
            "identifier": "initialExchangeDate",
            "group": "Notional Principal",
            "name": "Initial Exchange Date",
            "acronym": "IED",
            "type": "Timestamp",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "Date of the initial cash flow for Maturity and Non-Maturity CT's. It also coincides with the beginning of interest accrual calculation."
        },
        "initialMargin": {
            "identifier": "initialMargin",
            "group": "Margining",
            "name": "Initial Margin",
            "acronym": "MRIM",
            "type": "Real",
            "allowedValues": [
                "Positive"
            ],
            "default": "0",
            "description": "Margin to cover losses which may be incurred as a result of market fluctuations. \nUpon contract closing or maturity, the MRIM is reimbursed."
        },
        "interestCalculationBase": {
            "identifier": "interestCalculationBase",
            "group": "Interest",
            "name": "Interest Calculation Base",
            "acronym": "IPCB",
            "type": "Enum",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "notioalOutstanding",
                    "name": "Notional Outstanding",
                    "acronym": "NT",
                    "description": "Interest accrues on the basis of the notional outstanding."
                },
                {
                    "option": "1",
                    "identifier": "notionalAtInitialExchange",
                    "name": "Notional at Initial Exchange",
                    "acronym": "NTIED",
                    "description": "Interest accrues on the basis of the notional value at initial exchange."
                },
                {
                    "option": "2",
                    "identifier": "notionalLagged",
                    "name": "Notional Outstanding Lagged",
                    "acronym": "NTL",
                    "description": "Interest accrues on the basis of the lagged notional outstanding."
                }
            ],
            "default": "NT",
            "description": "This is important for amortizing instruments. The basis of interest calculation is normally the notional outstanding amount as per SD. This is considered the fair basis and in many countries the only legal basis. If NULL or NTSD is selected, this is the case. \nAlternative bases (normally in order to favor the lending institution) are found. In the extreme case the original balance (PCDD=NT+PDCDD) never gets adjusted. In this case PCDD must be chosen. \nAn intermediate case exist wherre balances do get adjusted, however with lags. In this case NTL mut be selected and anchor dates and cycles must be set."
        },
        "interestCalculationBaseAmount": {
            "identifier": "interestCalculationBaseAmount",
            "group": "Interest",
            "name": "Interest Calculation Base Amount",
            "acronym": "IPCBA",
            "type": "Real",
            "allowedValues": [
                "Positive"
            ],
            "default": "",
            "description": "This is the amount used for the calculation of interest. Calculation base per SD."
        },
        "lifeCap": {
            "identifier": "lifeCap",
            "group": "Rate Reset",
            "name": "Life Cap",
            "acronym": "RRLC",
            "type": "Real",
            "allowedValues": [],
            "default": "",
            "description": "For variable rate basic CTs this represents a cap on the interest rate that applies during the entire lifetime of the contract.\nFor CAPFL CTs this represents the cap strike rate."
        },
        "lifeFloor": {
            "identifier": "lifeFloor",
            "group": "Rate Reset",
            "name": "Life Floor",
            "acronym": "RRLF",
            "type": "Real",
            "allowedValues": [],
            "default": "",
            "description": "For variable rate basic CTs this represents a floor on the interest rate that applies during the entire lifetime of the contract.\nFor CAPFL CTs this represents the floor strike rate."
        },
        "maintenanceMarginLowerBound": {
            "identifier": "maintenanceMarginLowerBound",
            "group": "Margining",
            "name": "Maintenance Margin Lower Bound",
            "acronym": "MRMML",
            "type": "Real",
            "allowedValues": [
                "Positive"
            ],
            "default": "",
            "description": "Defines the lower bound of the Maintenance Margin. If MRVM falls below MRMML, then capital must be added to reach the original MRIM."
        },
        "maintenanceMarginUpperBound": {
            "identifier": "maintenanceMarginUpperBound",
            "group": "Margining",
            "name": "Maintenance Margin Upper Bound",
            "acronym": "MRMMU",
            "type": "Real",
            "allowedValues": [
                "Positive"
            ],
            "default": "",
            "description": "Defines the upper bound of the Maintenance Margin. If MRVM falls above MRMMU, then capital is refunded to reach the original MRIM."
        },
        "marketObjectCode": {
            "identifier": "marketObjectCode",
            "group": "Contract identification",
            "name": "Market Object Code",
            "acronym": "MOC",
            "type": "Varchar",
            "allowedValues": [],
            "default": "",
            "description": "Is pointing to the market value at SD (MarketObject).\nUnique codes for market objects must be used."
        },
        "marketObjectCodeOfScalingIndex": {
            "identifier": "marketObjectCodeOfScalingIndex",
            "group": "Notional Principal",
            "name": "Market Object Code Of Scaling Index",
            "acronym": "SCMO",
            "type": "Varchar",
            "allowedValues": [],
            "default": ""
        },
        "marketObjectCodeRateReset": {
            "identifier": "marketObjectCodeRateReset",
            "group": "Rate Reset",
            "name": "Market Object Code Rate Reset",
            "acronym": "RRMO",
            "type": "Varchar",
            "allowedValues": [],
            "default": "",
            "description": "Is pointing to the interest rate driver (MarketObject) used for rate reset uniquely.\nUnique codes for market objects must be used."
        },
        "marketValueObserved": {
            "identifier": "marketValueObserved",
            "group": "Notional Principal",
            "name": "Market Value Observed",
            "acronym": "MVO",
            "type": "Real",
            "allowedValues": [],
            "default": "",
            "description": "Value as observed in the market at SD per unit. Incase of fixed income instruments it is a fraction."
        },
        "maturityDate": {
            "identifier": "maturityDate",
            "group": "Notional Principal",
            "name": "Maturity Date",
            "acronym": "MD",
            "type": "Timestamp",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "Marks the contractual end of the lifecycle of a CT. Generally, date of the last cash flows. \nThis includes normally a principal and an interest payment. Some Maturity CTs as perpetuals (PBN) do not have such a date. For variable amortizing contracts of the ANN CT, this date might be less than the scheduled end of the contract (which is deduced from the periodic payment amount \nPRNXT). In this case it balloons."
        },
        "maximumPenaltyFreeDisbursement": {
            "identifier": "maximumPenaltyFreeDisbursement",
            "group": "Optionality",
            "name": "Maximum Penalty Free Disbursement",
            "acronym": "MPFD",
            "type": "Real",
            "allowedValues": [
                "Positive"
            ],
            "default": "[ the value of notionalPrincipal ]",
            "description": "Defines the notional amount which can be withdrawn before XDN without penalty"
        },
        "nextDividendPaymentAmount": {
            "identifier": "nextDividendPaymentAmount",
            "group": "Dividend",
            "name": "Next Dividend Payment Amount",
            "acronym": "DVNP",
            "type": "Real",
            "allowedValues": [
                "Positive"
            ],
            "default": "0",
            "description": "Defines the next dividend payment (amount) whereas the date of dividend payment is defined through the DVANX/DVCL pair. If DVCL is defined, then this amount will be used as dividend payment for each future dividend payment date."
        },
        "nextPrincipalRedemptionPayment": {
            "identifier": "nextPrincipalRedemptionPayment",
            "group": "Notional Principal",
            "name": "Next Principal Redemption Payment",
            "acronym": "PRNXT",
            "type": "Real",
            "allowedValues": [
                "Positive"
            ],
            "default": "",
            "description": "Amount of principal that will be paid during the redemption cycle at the next payment date. For amortizing contracts like ANN, NAM, ANX, and NAX this is the total periodic payment amount (sum of interest and principal)."
        },
        "nextResetRate": {
            "identifier": "nextResetRate",
            "group": "Rate Reset",
            "name": "Next Reset Rate",
            "acronym": "RRNXT",
            "type": "Real",
            "allowedValues": [],
            "default": "",
            "description": "Holds the new rate that has been fixed already (cf. attribute FixingDays) but not applied. This new rate will be applied at the next rate reset event (after SD and according to the rate reset schedule). Attention, RRNXT must be set to NULL after it is applied!"
        },
        "nominalInterestRate": {
            "identifier": "nominalInterestRate",
            "group": "Interest",
            "name": "Nominal Interest Rate",
            "acronym": "IPNR",
            "type": "Real",
            "allowedValues": [],
            "default": "",
            "description": "The nominal interest rate which will be used to calculate accruals and the next interest payment at the next IP date. NT multiplied with IPNR is the base for the interest payment calculation. The relevant time period is a function of IPDC. \nIf the contract is variable (RRANX set) this field is periodically updated per SD. \nIn the case of plan vanilla interest rate swaps (IRSPV) this defines the rate of fixed leg."
        },
        "nominalInterestRate2": {
            "identifier": "nominalInterestRate2",
            "group": "Interest",
            "name": "Nominal Interest Rate 2",
            "acronym": "IPNR2",
            "type": "Real",
            "allowedValues": [],
            "default": "",
            "description": "The nominal interest rate which will be used to calculate accruals and the next interest payment at the next IP date on the second leg (the one not mentioned in CNTRL) of a plain vanilla swap. The relevant time period is a function of IPDC. \nIt is periodically updated per SD."
        },
        "nonPerformingDate": {
            "identifier": "nonPerformingDate",
            "group": "Counterparty",
            "name": "Non Performing Date",
            "acronym": "NPD",
            "type": "Timestamp",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "The date of the (uncovered) payment event responsible for the current value of the Contract Performance attribute."
        },
        "notionalPrincipal": {
            "identifier": "notionalPrincipal",
            "group": "Notional Principal",
            "name": "Notional Principal",
            "acronym": "NT",
            "type": "Real",
            "allowedValues": [
                "Positive"
            ],
            "default": "",
            "description": "Current nominal value of the contract. For debt instrument this is the current remaining notional outstanding. \nNT is generally the basis on which interest payments are calculated. If IPCBS is set, IPCBS may introduce a different basis for interest payment calculation."
        },
        "notionalPrincipal2": {
            "identifier": "notionalPrincipal2",
            "group": "Notional Principal",
            "name": "Notional Principal 2",
            "acronym": "NT2",
            "type": "Real",
            "allowedValues": [
                "Positive"
            ],
            "default": "",
            "description": "Notional amount of the second currency to be exchanged in an FXOUT CT."
        },
        "optionExerciseEndDate": {
            "identifier": "optionExerciseEndDate",
            "group": "Optionality",
            "name": "Option Exercise End Date",
            "acronym": "OPXED",
            "type": "Timestamp",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "Final exercise date for American and Bermudan options, expiry date for European options."
        },
        "optionExerciseType": {
            "identifier": "optionExerciseType",
            "group": "Optionality",
            "name": "Option Exercise Type",
            "acronym": "OPXT",
            "type": "Enum",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "european",
                    "name": "European",
                    "acronym": "E",
                    "description": "European-type exercise."
                },
                {
                    "option": "1",
                    "identifier": "bermudan",
                    "name": "Bermudan",
                    "acronym": "B",
                    "description": "Bermudan-type exercise."
                },
                {
                    "option": "2",
                    "identifier": "american",
                    "name": "American",
                    "acronym": "A",
                    "description": "American-type exercise."
                }
            ],
            "default": "",
            "description": "Defines whether the option is European (exercised at a specific date), American (exercised during a span of time) or Bermudan (exercised at certain points during a span of time)."
        },
        "optionStrike1": {
            "identifier": "optionStrike1",
            "group": "Optionality",
            "name": "Option Strike 1",
            "acronym": "OPS1",
            "type": "Real",
            "allowedValues": [
                "Positive"
            ],
            "default": "",
            "description": "Strike price of the option. Whether it is a call/put is determined by the attribute OPTP, i.e a call or a put (or a combination of call/put).\nThis attribute is used for price related options such as options on bonds, stocks or FX. Interest rate related options (caps/floos) are handled within th RatReset group."
        },
        "optionStrike2": {
            "identifier": "optionStrike2",
            "group": "Optionality",
            "name": "Option Strike 2",
            "acronym": "OPS2",
            "type": "Real",
            "allowedValues": [
                "Positive"
            ],
            "default": "",
            "description": "Put price in case of call/put."
        },
        "optionType": {
            "identifier": "optionType",
            "group": "Optionality",
            "name": "Option Type",
            "acronym": "OPTP",
            "type": "Enum",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "call",
                    "name": "Call",
                    "acronym": "C",
                    "description": "Call option."
                },
                {
                    "option": "1",
                    "identifier": "put",
                    "name": "Put",
                    "acronym": "P",
                    "description": "Put option."
                },
                {
                    "option": "2",
                    "identifier": "callPut",
                    "name": "Call-Put",
                    "acronym": "CP",
                    "description": "Combination of call and put option."
                }
            ],
            "default": "",
            "description": "Defines whether the option is a call or put or a combination of it. This field has to be seen in combination with CNTRL where it is defined whether CRID is the buyer or the seller."
        },
        "penaltyRate": {
            "identifier": "penaltyRate",
            "group": "Optionality",
            "name": "Penalty Rate",
            "acronym": "PYRT",
            "type": "Real",
            "allowedValues": [
                "Positive"
            ],
            "default": "0",
            "description": "Either the rate or the absolute amount of the prepayment."
        },
        "penaltyType": {
            "identifier": "penaltyType",
            "group": "Optionality",
            "name": "Penalty Type",
            "acronym": "PYTP",
            "type": "Enum",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "noPenalty",
                    "name": "No Penalty",
                    "acronym": "N",
                    "description": "No penalty applies."
                },
                {
                    "option": "1",
                    "identifier": "fixedPenalty",
                    "name": "Fixed Penalty",
                    "acronym": "A",
                    "description": "A fixed amount applies as penalty."
                },
                {
                    "option": "2",
                    "identifier": "relativePenalty",
                    "name": "Relative Penalty",
                    "acronym": "R",
                    "description": "A penalty relative to the notional outstanding applies."
                },
                {
                    "option": "3",
                    "identifier": "interestRateDifferential",
                    "name": "Interest Rate Differential",
                    "acronym": "I",
                    "description": "A penalty based on the current interest rate differential relative to the notional outstanding applies."
                }
            ],
            "default": "O",
            "description": "Defines whether prepayment is linked to a penalty and of which kind."
        },
        "periodCap": {
            "identifier": "periodCap",
            "group": "Rate Reset",
            "name": "Period Cap",
            "acronym": "RRPC",
            "type": "Real",
            "allowedValues": [
                "Positive"
            ],
            "default": "",
            "description": "For variable rate basic CTs this represents the maximum positive rate change per rate reset cycle."
        },
        "periodFloor": {
            "identifier": "periodFloor",
            "group": "Rate Reset",
            "name": "Period Floor",
            "acronym": "RRPF",
            "type": "Real",
            "allowedValues": [
                "Positive"
            ],
            "default": "",
            "description": "For variable rate basic CTs this represents the maximum negative rate change per rate reset cycle."
        },
        "premiumDiscountAtIED": {
            "identifier": "premiumDiscountAtIED",
            "group": "Notional Principal",
            "name": "Premium Discount At IED",
            "acronym": "PDIED",
            "type": "Real",
            "allowedValues": [],
            "default": "0",
            "description": "Total original premium or discount that has been set at CDD and will be added to the (notional) cash flow at IED (cash flow at IED = NT+PDIED, w.r.t. an RPA CT). \nNegative value for discount and positive for premium.\nNote, similar to interest the PDIED portion is part of P&L."
        },
        "prepaymentEffect": {
            "identifier": "prepaymentEffect",
            "group": "Optionality",
            "name": "Prepayment Effect",
            "acronym": "PPEF",
            "type": "Enum",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "noPrepayment",
                    "name": "No Prepayment",
                    "acronym": "N",
                    "description": "Prepayment is not allowed under the agreement."
                },
                {
                    "option": "1",
                    "identifier": "prepaymentReducesRedemptionAmount",
                    "name": "Prepayment Reduces Redemption Amount",
                    "acronym": "A",
                    "description": "Prepayment is allowed and reduces the redemption amount for the remaining period up to maturity."
                },
                {
                    "option": "2",
                    "identifier": "prepaymentReducesMaturity",
                    "name": "Prepayment Reduces Maturity",
                    "acronym": "M",
                    "description": "Prepayment is allowed and reduces the maturity."
                }
            ],
            "default": "N",
            "description": "This attribute defines whether or not the right of prepayment exists and if yes, how prepayment affects the remaining principal redemption schedule of the contract"
        },
        "prepaymentPeriod": {
            "identifier": "prepaymentPeriod",
            "group": "Counterparty",
            "name": "Prepayment Period",
            "acronym": "PPP",
            "type": "Period",
            "allowedValues": [
                "ISO8601 Duration"
            ],
            "default": "P0D",
            "description": "If real payment happens before scheduled payment date minus PPP, then it is considered a prepayment. Effect of prepayments are further described in PPEF and related fields."
        },
        "priceAtPurchaseDate": {
            "identifier": "priceAtPurchaseDate",
            "group": "Notional Principal",
            "name": "Price At Purchase Date",
            "acronym": "PPRD",
            "type": "Real",
            "allowedValues": [],
            "default": "",
            "description": "Purchase price exchanged at PRD.  \nPPRD represents a clean price (includes premium/discount but not IPAC)."
        },
        "priceAtTerminationDate": {
            "identifier": "priceAtTerminationDate",
            "group": "Notional Principal",
            "name": "Price At Termination Date",
            "acronym": "PTD",
            "type": "Real",
            "allowedValues": [],
            "default": "",
            "description": "Sellingprice exchanged at PTD  PTDrepresents a clean price (includes premium/discount but not IPAC"
        },
        "purchaseDate": {
            "identifier": "purchaseDate",
            "group": "Notional Principal",
            "name": "Purchase Date",
            "acronym": "PRD",
            "type": "Timestamp",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "If a contract is bought after initiation (for example a bond on the secondary market) this date has to be set. It refers to the date at which the payment (of PPRD) and transfer of the security happens. In other words, PRD - if set - takes the role otherwise IED has from a cash flow perspective. \nNote, CPID of the CT is not the counterparty of the transaction!"
        },
        "quantity": {
            "identifier": "quantity",
            "group": "Notional Principal",
            "name": "Quantity",
            "acronym": "QT",
            "type": "Real",
            "allowedValues": [
                "Positive"
            ],
            "default": "1",
            "description": "This attribute relates either to physical contracts (COM) or underlyings of traded contracts. \nIn case of physical contracts it holds the number of underlying units of the specific good (e.g. number of barrels of oil). \nIn case of well defined traded contracts it holds the number of defined underlying instruments. Example: QT of STK CTs underlying a FUTUR indicates the number of those specific STK CTs which underlie the FUTUR."
        },
        "rateMultiplier": {
            "identifier": "rateMultiplier",
            "group": "Rate Reset",
            "name": "Rate Multiplier",
            "acronym": "RRMLT",
            "type": "Real",
            "allowedValues": [],
            "default": "1",
            "description": "Interest rate multiplier. A typical rate resetting rule is LIBOR plus x basis point where x represents the interest rate spread.\nHowever, in some cases like reverse or super floater contracts an additional rate multiplier applies. In this case, the new rate is determined as: IPNR after rate reset = Rate selected from the market object * RRMLT + RRSP."
        },
        "rateSpread": {
            "identifier": "rateSpread",
            "group": "Rate Reset",
            "name": "Rate Spread",
            "acronym": "RRSP",
            "type": "Real",
            "allowedValues": [],
            "default": "0",
            "description": "Interest rate spread. A typical rate resetting rule is LIBOR plus x basis point where x represents the interest rate spread.  \nThe following equation can be taken if RRMLT is not set: IPNR after rate reset = Rate selected from the market object  + RRSP."
        },
        "scalingEffect": {
            "identifier": "scalingEffect",
            "group": "Notional Principal",
            "name": "Scaling Effect",
            "acronym": "SCEF",
            "type": "Enum",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "noScaling",
                    "name": "No Scaling",
                    "acronym": "000",
                    "description": "No scaling applies."
                },
                {
                    "option": "1",
                    "identifier": "interestIsScaled",
                    "name": "Interest is Scaled",
                    "acronym": "I00",
                    "description": "Scaling applies only to interest."
                },
                {
                    "option": "2",
                    "identifier": "principalIsScaled",
                    "name": "Principal is Scaled",
                    "acronym": "0N0",
                    "description": "Scaling applies only to principal."
                },
                {
                    "option": "3",
                    "identifier": "interestAndPrincipalIsScaled",
                    "name": "Interest and Principal is Scaled",
                    "acronym": "IN0",
                    "description": "Scaling applies to interest and principal."
                }
            ],
            "default": "000\n",
            "description": "Indicates which payments are scaled. I = Interest payments, N = Nominal payments and M = Maximum deferred interest amount. They can be scaled in any combination."
        },
        "scalingIndexAtStatusDate": {
            "identifier": "scalingIndexAtStatusDate",
            "group": "Notional Principal",
            "name": "Scaling Index At Status Date",
            "acronym": "SCIED",
            "type": "Real",
            "allowedValues": [
                "Positive"
            ],
            "default": ""
        },
        "seniority": {
            "identifier": "seniority",
            "group": "Counterparty",
            "name": "Seniority",
            "acronym": "SEN",
            "type": "Enum",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "senior",
                    "name": "Senior",
                    "acronym": "S",
                    "description": "Contract represents senior debt."
                },
                {
                    "option": "1",
                    "identifier": "junior",
                    "name": "Junior",
                    "acronym": "J",
                    "description": "Contract represents junior debt."
                }
            ],
            "default": "",
            "description": "Refers to the order of repayment in the event of a sale or default of the issuer. "
        },
        "settlementCurrency": {
            "identifier": "settlementCurrency",
            "group": "Settlement",
            "name": "Settlement Currency",
            "acronym": "CURS",
            "type": "Varchar",
            "allowedValues": [
                "ISO4217"
            ],
            "default": "",
            "description": "The currency in which cash flows are settled. This currency can be different from the currency (CUR) in which cash flows or the contract, respectively, is denominated in which case the respective FX-rate applies at settlement time.\nIf no settlement currency is defined the cash flows are settled in the currency in which they are denominated."
        },
        "settlementDays": {
            "identifier": "settlementDays",
            "group": "Settlement",
            "name": "Settlement Days",
            "acronym": "STD",
            "type": "Period",
            "allowedValues": [
                "ISO8601 Duration"
            ],
            "default": "P0D",
            "description": "Defines the period from fixing of a contingent event/obligation (Exercise Date) to settlement of the obligation.\n"
        },
        "statusDate": {
            "identifier": "statusDate",
            "group": "Contract identification",
            "name": "Status Date",
            "acronym": "SD",
            "type": "Timestamp",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "SD holds the date per which all attributes of the record were updated. This is especially important for the highly dynamic attributes like Accruals, Notional, interest rates in variable instruments etc."
        },
        "terminationDate": {
            "identifier": "terminationDate",
            "group": "Notional Principal",
            "name": "Termination Date",
            "acronym": "TD",
            "type": "Timestamp",
            "allowedValues": [
                "ISO8601 Datetime"
            ],
            "default": "",
            "description": "If a contract is sold before MD (for example a bond on the secondary market) this date has to be set. It refers to the date at which the payment (of PTD) and transfer of the security happens. In other words, TD - if set - takes the role otherwise MD has from a cash flow perspective. \nNote, CPID of the CT is not the counterparty of the transaction!"
        },
        "unit": {
            "identifier": "unit",
            "group": "Notional Principal",
            "name": "Unit",
            "acronym": "UT",
            "type": "Enum",
            "allowedValues": [
                {
                    "option": "0",
                    "identifier": "barrel",
                    "name": "Barrel",
                    "acronym": "BRL",
                    "description": "Physical unit of the contract is Barrels."
                },
                {
                    "option": "1",
                    "identifier": "bushel",
                    "name": "Bushel",
                    "acronym": "BSH",
                    "description": "Physical unit of the contract is Bushel."
                },
                {
                    "option": "2",
                    "identifier": "gallon",
                    "name": "Gallon",
                    "acronym": "GLN",
                    "description": "Physical unit of the contract is Gallons."
                },
                {
                    "option": "3",
                    "identifier": "currencyUnit",
                    "name": "Currency Unit",
                    "acronym": "CUU",
                    "description": "Physical unit of the contract is Currency Units."
                },
                {
                    "option": "4",
                    "identifier": "megaWattHours",
                    "name": "Mega Watt Hours",
                    "acronym": "MWH",
                    "description": "Physical unit of the contract is Mega Watt Hours."
                },
                {
                    "option": "5",
                    "identifier": "pounds",
                    "name": "Pounds",
                    "acronym": "PND",
                    "description": "Physical unit of the contract is Pounds."
                },
                {
                    "option": "6",
                    "identifier": "shortTons",
                    "name": "Short Tons",
                    "acronym": "STN",
                    "description": "Physical unit of the contract is Short Tons."
                },
                {
                    "option": "7",
                    "identifier": "tons",
                    "name": "Tons",
                    "acronym": "TON",
                    "description": "Physical unit of the contract is Tons."
                },
                {
                    "option": "8",
                    "identifier": "troyOunce",
                    "name": "Troy Ounce",
                    "acronym": "TRO",
                    "description": "Physical unit of the contract is Troy Ounces."
                }
            ],
            "default": "",
            "description": "The physical unit of the contract. Example: Barrels for an Oil COM CT."
        },
        "variationMargin": {
            "identifier": "variationMargin",
            "group": "Margining",
            "name": "Variation Margin",
            "acronym": "MRVM",
            "type": "Real",
            "allowedValues": [
                "Positive"
            ],
            "default": "",
            "description": "MRVM reflects the accrued but not yet paid margin as per SD.  \nOpen traded positions are revalued by the exchange at the end of every trading day using mark-to-market valuation. Often clearing members do not credit or debit their clients daily with MRVM, but rather use a Maintenance Margin. If the balance falls outside MRMML (and MRMMU), then  capital must be added (is refunded) to reach the original margin amount MRIM. We can also say that MVO+MRVM is equal to the reference value as per last margin update."
        },
        "xDayNotice": {
            "identifier": "xDayNotice",
            "group": "Notional Principal",
            "name": "X Day Notice",
            "acronym": "XDN",
            "type": "Period",
            "allowedValues": [
                "ISO8601 Duration"
            ],
            "default": "",
            "description": "Used as rolling attribute with the callable CT's UMP and CLM uniquely. CLM's and UMP's will not be settled (MD not set) until the client uses his option to call the contract X_Day_Notice after Current Date. As long as MD or TD is not set, the client postpones his right to call to the future. The cycle is normally defined in number of business days."
        }
    }
}

